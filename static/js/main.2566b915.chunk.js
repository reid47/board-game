(this.webpackJsonpmathways=this.webpackJsonpmathways||[]).push([[0],[,,,,,,function(e,t,n){e.exports=n(13)},,,,,function(e,t,n){},function(e,t,n){},function(e,t,n){"use strict";n.r(t);var l=n(0),r=n.n(l),o=n(3),a=n.n(o),i=n(1),s=(n(11),n(4)),c=n(5);function h(e,t){return Math.floor(Math.random()*(t-e+1))+e}function u(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return{width:e.width||12,height:e.height||12,boardDice:e.boardDice||[[1,2,3,4,5,6]],moveLengthDice:e.moveLengthDice||[[1,2,3,4,5,6],[1,2,3,4,5,6]],moveTotalDice:e.moveTotalDice||[[1,2,3,4,5,6],[1,2,3,4,5,6]],playerNames:["player 1","player 2"]}}var d=function(){function e(t){Object(s.a)(this,e),this.settings=void 0,this.playerCount=void 0,this.moveCount=void 0,this.currentScores=void 0,this.currentMove=void 0,this.currentSelection=void 0,this.isSelectionValid=void 0,this.board=void 0,this.possibleSelections=void 0,this.isOver=void 0,this.settings=u(t),this.playerCount=2,this.board=[],this.currentSelection={cells:[],total:0},this.moveCount=0,this.currentMove=this.nextMove(),this.currentScores=[0,0],this.isSelectionValid=!1,this.isOver=!1;for(var n=0;n<this.settings.height;n++){this.board.push([]);for(var l=0;l<this.settings.width;l++){var r="".concat(n,",").concat(l),o=this.determineSymbol(n,l),a=-1;"number"===typeof o&&(0===n?a=0:n===this.settings.height-1&&(a=1)),this.board[n].push({id:r,row:n,col:l,symbol:o,owner:a,selected:!1})}}this.calculateScores(),this.possibleSelections=this.calculatePossibleSelections()}return Object(c.a)(e,[{key:"nextMove",value:function(){var e=this.settings,t=e.moveLengthDice,n=e.moveTotalDice,l=0===this.moveCount?h(0,1):(this.currentMove.player+1)%this.playerCount,r=this.rollDice(t),o=this.rollDice(n);return{number:this.moveCount++,player:l,size:r,target:o}}},{key:"clone",value:function(){return Object.assign(new e,this)}},{key:"selectCell",value:function(e,t){var n=this.cell(e,t);n&&this.possibleSelections.has(n.id)&&(this.currentSelection.cells.length>=this.currentMove.size||(n.selected=!0,this.currentSelection.cells.push(n),this.currentSelection.total=this.calculateSelectionTotal(),this.possibleSelections=this.calculatePossibleSelections(),this.checkSelectionValid()))}},{key:"deselectCell",value:function(e,t){if(this.currentSelection.cells.length){var n=[],l=!1,r=!0,o=!1,a=void 0;try{for(var i,s=this.currentSelection.cells[Symbol.iterator]();!(r=(i=s.next()).done);r=!0){var c=i.value;c.row===e&&c.col===t?(c.selected=!1,l=!0):l?c.selected=!1:n.push(c)}}catch(h){o=!0,a=h}finally{try{r||null==s.return||s.return()}finally{if(o)throw a}}this.currentSelection.cells=n,this.currentSelection.total=this.calculateSelectionTotal(),this.possibleSelections=this.calculatePossibleSelections(),this.checkSelectionValid()}}},{key:"resetSelection",value:function(){var e=!0,t=!1,n=void 0;try{for(var l,r=this.currentSelection.cells[Symbol.iterator]();!(e=(l=r.next()).done);e=!0){l.value.selected=!1}}catch(o){t=!0,n=o}finally{try{e||null==r.return||r.return()}finally{if(t)throw n}}this.currentSelection={cells:[],total:0},this.possibleSelections=this.calculatePossibleSelections(),this.checkSelectionValid()}},{key:"passMove",value:function(){this.currentMove=this.nextMove(),this.resetSelection()}},{key:"makeMove",value:function(){if(this.isSelectionValid){var e=!0,t=!1,n=void 0;try{for(var l,r=this.currentSelection.cells[Symbol.iterator]();!(e=(l=r.next()).done);e=!0){var o=l.value;o.owner=this.currentMove.player,o.selected=!1}}catch(a){t=!0,n=a}finally{try{e||null==r.return||r.return()}finally{if(t)throw n}}this.clearOrphanedCells(),this.calculateScores(),this.currentMove=this.nextMove(),this.resetSelection(),this.checkIfOver()}}},{key:"isSelected",value:function(e,t){var n;return(null===(n=this.cell(e,t))||void 0===n?void 0:n.selected)||!1}},{key:"checkIfOver",value:function(){for(var e=this.board[0],t=this.board[this.settings.height-1],n=0;n<this.settings.width;n++)if(1===e[n].owner||0===t[n].owner)return this.possibleSelections.clear(),void(this.isOver=!0)}},{key:"checkSelectionValid",value:function(){this.currentSelection.cells.length?"number"===typeof this.currentSelection.cells[this.currentSelection.cells.length-1].symbol&&this.currentSelection.total===this.currentMove.target?this.isSelectionValid=!0:this.isSelectionValid=!1:this.isSelectionValid=!1}},{key:"calculateScores",value:function(){var e=this;this.currentScores=[0,0],this.forEachCell((function(t){t.owner<0||e.currentScores[t.owner]++}))}},{key:"clearOrphanedCells",value:function(){for(var e=this,t=new Set,n=[],l=0===this.currentMove.player?this.settings.height-1:0,r=0;r<this.settings.width;r++){var o=this.cell(l,r);"number"===typeof o.symbol&&(o.owner>-1&&o.owner!==this.currentMove.player&&n.push(o))}for(;n.length;){var a=n.pop();if(!t.has(a.id)){t.add(a.id);var i=function(t,l){var r=e.cell(t,l);r&&r.owner>-1&&r.owner!==e.currentMove.player&&n.push(e.cell(t,l))};i(a.row-1,a.col),i(a.row+1,a.col),i(a.row,a.col-1),i(a.row,a.col+1),i(a.row-1,a.col-1),i(a.row+1,a.col+1),i(a.row-1,a.col+1),i(a.row+1,a.col-1)}}this.forEachCell((function(n){n.owner===e.currentMove.player||t.has(n.id)||(n.owner=-1)}))}},{key:"cell",value:function(e,t){var n=this.board[e];return n&&n[t]}},{key:"calculateSelectionTotal",value:function(){for(var e=0,t=0;t<this.currentSelection.cells.length;){var n=this.currentSelection.cells[t];if(0!==t){var l=this.currentSelection.cells[t+1];if(!l)break;switch(n.symbol){case"+":e+=l.symbol;break;case"-":e-=l.symbol;break;case"*":e*=l.symbol}t+=2}else e+=n.symbol,t++}return e}},{key:"calculatePossibleSelections",value:function(){var e=this,t=new Set;if(!this.currentSelection.cells.length)return this.forEachCell((function(n){n.owner===e.currentMove.player&&"number"===typeof n.symbol&&t.add(n.id)})),t;if(this.currentSelection.cells.length>=this.currentMove.size)return t;var n=this.currentSelection.cells[this.currentSelection.cells.length-1];return this.forEachCell((function(l){l.selected||e.cell(l.row-1,l.col)!==n&&e.cell(l.row+1,l.col)!==n&&e.cell(l.row,l.col-1)!==n&&e.cell(l.row,l.col+1)!==n||t.add(l.id)})),t}},{key:"forEachCell",value:function(e){for(var t=0;t<this.settings.height;t++)for(var n=0;n<this.settings.width;n++){e(this.board[t][n])}}},{key:"determineSymbol",value:function(e,t){var n=e%2===0,l=t%2===0;return n&&!l||!n&&l?this.rollDice(this.settings.boardDice):["+","-","*"][h(0,2)]}},{key:"rollDice",value:function(e){var t=0,n=!0,l=!1,r=void 0;try{for(var o,a=e[Symbol.iterator]();!(n=(o=a.next()).done);n=!0){var i=o.value;t+=i[h(0,i.length-1)]}}catch(s){l=!0,r=s}finally{try{n||null==a.return||a.return()}finally{if(l)throw r}}return t}}]),e}();function v(e,t){switch(t.type){case"selectCell":e.selectCell(t.row,t.col);break;case"deselectCell":e.deselectCell(t.row,t.col);break;case"resetMove":e.resetSelection();break;case"confirmMove":e.makeMove();break;case"passMove":window.confirm("Are you sure you want to pass your turn?")&&e.passMove()}return e.clone()}var m=function(){var e=u({}),t=new URLSearchParams(window.location.search),n=function(n){t.has(n)&&(e[n]=parseInt(t.get(n)))},l=function(n){if(t.has(n)){var l=t.getAll(n);e[n]=l.map((function(e){return e.split(",").map((function(e){return parseInt(e)}))}))}};return n("width"),n("height"),l("boardDice"),l("moveTotalDice"),l("moveLengthDice"),t.has("player1")&&(e.playerNames[0]=t.get("player1")),t.has("player2")&&(e.playerNames[1]=t.get("player2")),e}();function f(e){var t="cell";return e.owner>-1&&(t+=" player-".concat(e.owner)),e.selected&&(t+=" selected"),e.selectable&&(t+=" selectable"),r.a.createElement("button",{className:t,onClick:e.onClick,disabled:!e.selected&&!e.selectable},e.children)}var p=function(){var e=Object(l.useReducer)(v,new d(m)),t=Object(i.a)(e,2),n=t[0],o=t[1],a=n.currentMove,s=n.currentSelection,c=n.currentScores,h=n.isSelectionValid,u=n.isOver,p=s.cells.length?function e(t){if(t.length<4)return t.map((function(e){return e.symbol})).join("");var n="number"===typeof t[t.length-1].symbol?t.length-2:t.length-1,l=t.slice(0,n),r=t.slice(n);return"(".concat(e(l),")").concat(e(r))}(s.cells):"",y=null;if(u){var w=Object(i.a)(c,2),b=w[0],g=w[1];y=b>g?"".concat(m.playerNames[0]," wins!"):g>b?"".concat(m.playerNames[1]," wins!"):"It's a draw!"}else y=r.a.createElement(r.a.Fragment,null,r.a.createElement("div",{className:"header-detail"},m.playerNames[a.player],"'s turn"),r.a.createElement("div",{className:"header-detail"},p," ",p&&r.a.createElement("span",null,"= ",r.a.createElement("b",null,s.total)," |")," ","must total ",r.a.createElement("b",null,a.target)),r.a.createElement("div",{className:"header-detail"},"using ",r.a.createElement("b",null,s.cells.length)," of up to"," ",r.a.createElement("b",null,a.size)," squares"),r.a.createElement("button",{className:"header-button",disabled:0===s.cells.length,onClick:function(){return o({type:"resetMove"})}},"reset"),r.a.createElement("button",{className:"header-button",onClick:function(){return o({type:"passMove"})}},"pass"),r.a.createElement("button",{className:"header-button",disabled:!h,onClick:function(){return o({type:"confirmMove"})}},"confirm"));return r.a.createElement("div",{className:"App"},r.a.createElement("header",null,r.a.createElement("div",{className:"header-detail"},m.playerNames[0],": ",r.a.createElement("b",null,c[0])," squares |"," ",m.playerNames[1],": ",r.a.createElement("b",null,c[1])," squares"),y),r.a.createElement("main",null,r.a.createElement("div",{className:"board",style:{width:"".concat(50*n.settings.width,"px")}},n.board.map((function(e,t){return r.a.createElement("div",{key:t,className:"row"},e.map((function(e,l){var a=n.possibleSelections.has(e.id),i=!a&&n.isSelected(t,l),s=a?function(){return o({type:"selectCell",row:t,col:l})}:i?function(){return o({type:"deselectCell",row:t,col:l})}:void 0;return r.a.createElement(f,{key:e.id,owner:e.owner,selected:i,selectable:a,onClick:s},e.symbol)})))})))),r.a.createElement("section",null,r.a.createElement("h2",null,"how to play"),r.a.createElement("p",null,'Each player starts with some squares on one side of the board (their "home row"). They claim squares each turn until the game ends.'),r.a.createElement("p",null,"Each turn, a player rolls two sets of dice: one determines their target move total, and one determines the maximum squares they can use to get to that total. For example, if a turn has a target of 10 and can use up to 4 squares, they might play ",r.a.createElement("code",null,"(1 + 5) * 2")," to reach 10."),r.a.createElement("p",null,"When a player uses a square in a turn, they claim that square. A player may claim a square owned by their opponent; this means they take over that square. All owned squares must be reachable from a player's home row. If a player makes a move that \"cuts off\" some of their opponent's squares (rendering them unreachable from the opponent's home row), the opponent loses those squares."),r.a.createElement("p",null,"Players earn a point for each square they have claimed. The game ends when one player claims a square in their opponent's home row. At that point, the scores are finalized, and the highest score wins.")),r.a.createElement("section",null,r.a.createElement("h2",null,"settings"),r.a.createElement("p",null,"Settings can be changed with query parameters."),r.a.createElement("p",null,"For example, ",r.a.createElement("code",null,"?player1=A&player2=B&width=20"),' sets player names to "A" and "B", with a board width of 20.'),r.a.createElement("p",null,"Current settings:"),r.a.createElement("pre",null,r.a.createElement("code",null,JSON.stringify(m,null,2)))))},y=(n(12),Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)));function w(e,t){navigator.serviceWorker.register(e).then((function(e){e.onupdatefound=function(){var n=e.installing;null!=n&&(n.onstatechange=function(){"installed"===n.state&&(navigator.serviceWorker.controller?(console.log("New content is available and will be used when all tabs for this page are closed. See https://bit.ly/CRA-PWA."),t&&t.onUpdate&&t.onUpdate(e)):(console.log("Content is cached for offline use."),t&&t.onSuccess&&t.onSuccess(e)))})}})).catch((function(e){console.error("Error during service worker registration:",e)}))}a.a.render(r.a.createElement(p,null),document.getElementById("root")),function(e){if("serviceWorker"in navigator){if(new URL("/board-game",window.location.href).origin!==window.location.origin)return;window.addEventListener("load",(function(){var t="".concat("/board-game","/service-worker.js");y?(!function(e,t){fetch(e,{headers:{"Service-Worker":"script"}}).then((function(n){var l=n.headers.get("content-type");404===n.status||null!=l&&-1===l.indexOf("javascript")?navigator.serviceWorker.ready.then((function(e){e.unregister().then((function(){window.location.reload()}))})):w(e,t)})).catch((function(){console.log("No internet connection found. App is running in offline mode.")}))}(t,e),navigator.serviceWorker.ready.then((function(){console.log("This web app is being served cache-first by a service worker. To learn more, visit https://bit.ly/CRA-PWA")}))):w(t,e)}))}}()}],[[6,1,2]]]);
//# sourceMappingURL=main.2566b915.chunk.js.map